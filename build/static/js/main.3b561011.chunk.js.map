{"version":3,"sources":["App.tsx","Constants/constants.tsx","Components/Viewer.tsx","serviceWorker.ts","index.tsx"],"names":["require","verify","isValid","DocumentIntegrity","props","myRef","state","document_integrity","document_status","issuer_identity","React","createRef","JSON","parse","this","certificate_contents","network","then","fragments","setState","verify_document","regularStyle","errorStyle","className","onClick","e","certificate_resetter","Component","init","FileUploader","fileUploaderInput","dragEventCounter","dragenterListener","event","overrideEventDefaults","dataTransfer","items","types","dragging","dragleaveListener","dropListener","files","type","certificate","readFileContents","handleFileContents","fileBubbler","preventDefault","stopPropagation","onSelectFileClick","click","onFileChanged","target","file","callback","data_reader","FileReader","onload","result","replace","RegExp","Buffer","toString","readAsDataURL","file_contents","contentBubbler","error","console","log","window","addEventListener","removeEventListener","FileUploaderPresentationalComponent","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","counter","uploaderClasses","App","useState","setCertificate","certificateContents","setCertificateContents","viewSwitchIndicator","setViewSwitchIndicator","Initial","useRef","useEffect","current","inputFile","inputContent","document","name","getData","styleObject","TemplatesContainer","styled","div","FrameContainer","DocumentsContainer","cssObject","firstStyle","css","secondStyle","thirdStyle","fourthStyle","Viewer","toFrame","setToFrame","height","setHeight","templates","setTemplates","selectedTemplate","setSelectedTemplate","fn","useCallback","renderDocument","payload","map","template","key","id","href","label","FrameConnector","source","dispatch","action","onConnected","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"qOAQ4BA,EAAQ,IAA5BC,E,EAAAA,OAAQC,E,EAAAA,QAaVC,E,kDAIJ,WAAYC,GAAwB,IAAD,8BACjC,cAAMA,IAHRC,WAEmC,EAEjC,EAAKC,MAAQ,CACXC,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,GAEnB,EAAKJ,MAAQK,IAAMC,YAPc,E,8DAUhB,IAAD,OAChBV,EAAOW,KAAKC,MAAMC,KAAKV,MAAMW,sBAAwB,CACnDC,QAAS,YACRC,MAAK,SAACC,GACP,EAAKC,SAAS,CACZZ,mBAAoBL,EAAQgB,EAAW,CAAC,uBACxCV,gBAAiBN,EAAQgB,EAAW,CAAC,oBACrCT,gBAAiBP,EAAQgB,EAAW,CAAC,2B,0CAMF,MAAnCJ,KAAKV,MAAMW,sBACfD,KAAKM,oB,+BAGG,IAAD,OACHC,EAAe,2BACfC,EAAa,mCAOjB,OANuC,MAAnCR,KAAKV,MAAMW,qBACbM,GAAgB,QAEhBC,GAAc,QAId,yBAAKC,UAAU,qBACb,4BAAQA,UAAWF,GACjB,yBAAKE,UAAU,mBACZT,KAAKR,MAAMC,mBACV,uBAAGgB,UAAU,sBAAb,sBAEA,uBAAGA,UAAU,sBAAb,sBAEDT,KAAKR,MAAME,gBACV,uBAAGe,UAAU,sBAAb,oBAEA,uBAAGA,UAAU,sBAAb,oBAEDT,KAAKR,MAAMG,gBACV,uBAAGc,UAAU,sBAAb,sBAEA,uBAAGA,UAAU,sBAAb,sBAEJ,4BAAQC,QAAS,SAACC,GAAY,EAAKrB,MAAMsB,yBAAzC,6BAGF,4BAAQH,UAAWD,GACjB,4E,GA/DsBZ,IAAMiB,WAAhCxB,EACGyB,MAAgB,E,IAgFnBC,E,kDAIJ,WAAYzB,GAAmB,IAAD,8BAC5B,cAAMA,IAHR0B,kBAAwC,KAEV,EAS9BC,iBAAmB,EATW,EAU9BC,kBAAoB,SAACC,GACnB,EAAKC,sBAAsBD,GAC3B,EAAKF,oBACDE,EAAME,aAAaC,OAASH,EAAME,aAAaC,MAAM,IAGvDH,EAAME,aAAaE,OACa,UAAhCJ,EAAME,aAAaE,MAAM,KAHzB,EAAKlB,SAAS,CAAEmB,UAAU,KAdA,EAyB9BC,kBAAoB,SAACN,GACnB,EAAKC,sBAAsBD,GAC3B,EAAKF,mBAEyB,IAA1B,EAAKA,kBACP,EAAKZ,SAAS,CAAEmB,UAAU,KA9BA,EAkC9BE,aAAe,SAACP,GACd,EAAKC,sBAAsBD,GAC3B,EAAKF,iBAAmB,EACxB,EAAKZ,SAAS,CAAEmB,UAAU,IAGe,qBAArCL,EAAME,aAAaM,MAAM,GAAGC,MAE5BT,EAAME,aAAaM,OAASR,EAAME,aAAaM,MAAM,KACvD,EAAKtB,SAAS,CACZwB,YAAaV,EAAME,aAAaM,MAAM,KAKxC,EAAKG,iBAAiBX,EAAME,aAAaM,MAAM,IAAI,WAKX,OAApC,EAAKnC,MAAMS,sBACgB,OAA3B,EAAKT,MAAMqC,cAEX,EAAKE,mBAAmB,EAAKvC,MAAMS,sBACnC,EAAKX,MAAM0C,YAAY,EAAKxC,MAAMqC,mBA1DZ,EA+F9BT,sBAAwB,SAACD,GACvBA,EAAMc,iBACNd,EAAMe,mBAjGsB,EAoG9BC,kBAAoB,WAClB,EAAKnB,mBAAqB,EAAKA,kBAAkBoB,SArGrB,EAwG9BC,cAAgB,SAAClB,GACXA,EAAMmB,OAAOX,OAASR,EAAMmB,OAAOX,MAAM,IAC3C,EAAKtB,SAAS,CAAEwB,YAAaV,EAAMmB,OAAOX,MAAM,MAxGlD,EAAKnC,MAAQ,CACXgC,UAAU,EACVK,YAAa,KACb5B,qBAAsB,MALI,E,6DAgEbsC,EAAYC,GAAqB,IAAD,OAC3CC,EAA0B,IAAIC,WAElCD,EAAYE,OAAS,SAAChC,GACpB,IAAIiC,EAAiBjC,EAAE2B,OAAOM,OAAOC,QACnC,IAAIC,OAAO,eACX,IAEF,EAAKzC,SAAS,CACZJ,qBAAsB,IAAI8C,EAAOH,EAAQ,UAAUI,SAAS,WAE9DR,KAEFC,EAAYQ,cAAcV,K,yCAGTW,GACjB,IAE6BpD,KAAKC,MAAMmD,GAKtClD,KAAKV,MAAM6D,eAAenD,KAAKR,MAAMS,sBACrC,MAAOmD,GAEPC,QAAQC,IAAI,uC,0CAmBK,IAAD,OAClBC,OAAOC,iBAAiB,YAAY,SAACrC,GACnC,EAAKC,sBAAsBD,MAE7BoC,OAAOC,iBAAiB,QAAQ,SAACrC,GAC/B,EAAKC,sBAAsBD,Q,6CAK7BoC,OAAOE,oBAAoB,WAAYzD,KAAKoB,uBAC5CmC,OAAOE,oBAAoB,OAAQzD,KAAKoB,yB,+BAIxC,OACE,kBAACsC,EAAD,CACElC,SAAUxB,KAAKR,MAAMgC,SACrBmC,OAAQ3D,KAAKoB,sBACbwC,YAAa5D,KAAKoB,sBAClByC,UAAW7D,KAAKoB,sBAChB0C,WAAY9D,KAAKoB,sBACjB2C,YAAa/D,KAAKkB,kBAClB8C,YAAahE,KAAKyB,kBAClBwC,OAAQjE,KAAK0B,mB,GA1IM9B,IAAMiB,WAA3BE,EACGmD,QAAU,EA0JnB,IAAMR,EAAoF,SACxFpE,GACI,IAEFkC,EAQElC,EARFkC,SACAmC,EAOErE,EAPFqE,OACAC,EAMEtE,EANFsE,YACAC,EAKEvE,EALFuE,UACAC,EAIExE,EAJFwE,WACAC,EAGEzE,EAHFyE,YACAC,EAEE1E,EAFF0E,YACAC,EACE3E,EADF2E,OAIEE,EAAkB,gBAKtB,OAJI3C,IACF2C,GAAmB,4BAInB,yBACE1D,UAAW0D,EACXR,OAAQA,EACRC,YAAaA,EACbC,UAAWA,EACXC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,OAAQA,GAER,yBAAKxD,UAAU,2BACb,yDA0FO2D,IA/EsB,WAAO,IAAD,EACHC,mBAAsB,MADnB,mBAClCxC,EADkC,KACrByC,EADqB,OAEaD,mBACpDnF,EAAQ,MAH+B,mBAElCqF,EAFkC,KAEbC,EAFa,OAKaH,oBACpD,GANuC,mBAKlCI,EALkC,KAKbC,EALa,KAuBnCC,EAA2CC,kBAAO,GAcxD,OAZAC,qBAAU,WACJF,EAAQG,QACVH,EAAQG,SAAU,EAIA,OAAhBjD,GAEF6C,GAAuB,KAExB,CAAC7C,EAAa0C,IAGf,yBAAK9D,UAAU,OACb,4BAAQA,UAAU,sCAChB,yBACEA,UACE,sBACCgE,EAAsB,mBAAqB,KAG9C,kBAAC1D,EAAD,CACEiB,YAtCS,SAAC+C,GAClBT,EAAeS,IAsCP5B,eApCY,SAAC6B,GACrBR,EAAuBQ,OAsCnB,yBACEvE,UACE,sBACEgE,EAA2C,YAArB,qBAGzBA,EACC,oCACE,kBAAC,IAAD,CACEQ,SAAU,CACRC,KAAM,eACND,SAAUE,kBAAQrF,KAAKC,MAAMwE,OAGjC,kBAAClF,EAAD,CACEY,qBAAsBsE,EACtB3D,qBApDK,WAGjB8D,GAAuB,GACvBJ,EAAe,MACfE,EAAuB,QAmDf,oC,60FChXL,IAAMY,EAAc,CACvBC,mBAAoBC,IAAOC,IAAT,KAElBC,eAAgBF,IAAOC,IAAT,KAGdE,mBAAoBH,IAAOC,IAAT,MAqBTG,EAAY,CACvBC,WAAYC,YAAF,KAIVC,YAAaD,YAAF,KAMXE,WAAYF,YAAF,KAuCVG,YAAaH,YAAF,M,whBC6DEI,IA1H0C,SAAC,GAE/B,IADzBf,EACwB,EADxBA,SACwB,EACMZ,qBADN,mBACjB4B,EADiB,KACRC,EADQ,OAEI7B,mBAAS,IAFb,mBAEjB8B,EAFiB,KAETC,EAFS,OAGU/B,mBAChC,IAJsB,mBAGjBgC,EAHiB,KAGNC,EAHM,OAMcjC,qBANd,mBAMJC,GANI,aAWwBD,mBAAiB,IAXzC,mBAWjBkC,EAXiB,KAWCC,EAXD,KAYlBC,EAAKC,uBAAY,SAACT,GACtBC,GAAW,kBAAMD,OAChB,IAsDH,OAxCA1C,OAAOoD,eAAiB,SAAC1B,GACnBgB,GAAWhB,GACbgB,EAAQ,CACNrE,KAAM,kBACNgF,QAAS,CACP3B,eAMRJ,qBAAU,WACQ,MAAZI,GACa,OAAbA,GACFX,EAAeW,KAEhB,IAEHJ,qBAAU,WACQ,MAAZI,GACAgB,GAAWhB,GACbgB,EAAQ,CACNrE,KAAM,kBACNgF,QAAS,CACP3B,SAAUA,EAASA,cAIxB,CAACgB,EAAShB,IAEbJ,qBAAU,WACQ,MAAZI,GACAgB,GAAWM,GACbN,EAAQ,CACNrE,KAAM,kBACNgF,QAASL,MAGZ,CAACA,EAAkBN,IAGpB,mBACML,IAAKA,YAAF,MAIP,YAACR,EAAYI,eAAb,KACE,mBACEI,IAAKA,YAAF,IAEUX,EAAW,QAAU,SAGlC,YAACG,EAAYC,mBAAb,KACE,kBAAIO,IAAKF,EAAUI,YAChBO,EAAUQ,KAAI,SAACC,GAAD,OACb,kBACEC,IAAKD,EAASE,GACdvG,UAAS,cACP8F,IAAqBO,EAASE,GAAK,WAAa,IAElDtG,QAAS,WACP8F,EAAoBM,EAASE,MAG/B,iBAAGC,KAAK,KAAKH,EAASI,aAK9B,mBAAKtB,IAAKF,EAAUK,aAClB,YAACoB,EAAA,EAAD,CAEEC,OAAO,8BACPC,SAtFM,SAACC,GACG,kBAAhBA,EAAO1F,MACTwE,EAAUkB,EAAOV,SAEC,qBAAhBU,EAAO1F,OACT0E,EAAagB,EAAOV,SACpBJ,EAAoBc,EAAOV,QAAQ,GAAGI,MAiF9BO,YAAad,EACbb,IAAKA,YAAF,IAISO,W,mmDCrHNqB,QACW,cAA7BjE,OAAOkE,SAASC,UAEe,UAA7BnE,OAAOkE,SAASC,UAEhBnE,OAAOkE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC1D,EAAA,EAAD,OAEFa,SAAS8C,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/H,MAAK,SAAAgI,GACJA,EAAaC,gBAEdC,OAAM,SAAAjF,GACLC,QAAQD,MAAMA,EAAMkF,c","file":"static/js/main.3b561011.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { getData } from \"@govtechsg/open-attestation\";\nimport \"./App.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nimport Viewer from \"./Components/Viewer\";\nimport { servicesVersion } from \"typescript\";\n\nconst { verify, isValid } = require(\"@govtechsg/oa-verify\");\n\ntype IntegrityProps = {\n  certificate_contents: string;\n  certificate_resetter: Function;\n}\n\ntype IntegrityState = {\n  document_integrity: boolean;\n  document_status: boolean;\n  issuer_identity: boolean;\n};\n\nclass DocumentIntegrity extends React.Component<IntegrityProps, IntegrityState> {\n  static init: boolean = true;\n  myRef: React.RefObject<any>;\n\n  constructor(props: IntegrityProps) {\n    super(props);\n    this.state = {\n      document_integrity: false,\n      document_status: false,\n      issuer_identity: false,\n    };\n    this.myRef = React.createRef();\n  }\n\n  verify_document() {\n    verify(JSON.parse(this.props.certificate_contents!), {\n      network: \"ropsten\",\n    }).then((fragments: any) => {\n      this.setState({\n        document_integrity: isValid(fragments, [\"DOCUMENT_INTEGRITY\"]),\n        document_status: isValid(fragments, [\"DOCUMENT_STATUS\"]),\n        issuer_identity: isValid(fragments, [\"ISSUER_IDENTITY\"]),\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.certificate_contents == null) return;\n    this.verify_document();\n  }\n\n  render() {\n    let regularStyle = \"DocumentIntegrity-Header\";\n    let errorStyle = \"DocumentIntegrity-Header-Invalid\";\n    if (this.props.certificate_contents == null) {\n      regularStyle += \" hide\";\n    } else {\n      errorStyle += \" hide\";\n    }\n\n    return (\n      <div className=\"DocumentIntegrity\">\n        <header className={regularStyle}>\n          <div className=\"StatusContainer\">\n            {this.state.document_integrity ? (\n              <i className=\"fa fa-check-circle\"> Not tampered with</i>\n            ) : (\n              <i className=\"fa fa-times-circle\"> Not tampered with</i>\n            )}\n            {this.state.document_status ? (\n              <i className=\"fa fa-check-circle\"> Has been issued</i>\n            ) : (\n              <i className=\"fa fa-times-circle\"> Has been issued</i>\n            )}\n            {this.state.issuer_identity ? (\n              <i className=\"fa fa-check-circle\"> Issuer identified</i>\n            ) : (\n              <i className=\"fa fa-times-circle\"> Issuer identified</i>\n            )}\n          <button onClick={(e: any) => {this.props.certificate_resetter()}}>Verify another document</button>\n          </div>\n        </header>\n        <header className={errorStyle}>\n          <p>Please upload a valid JSON certificate.</p>\n        </header>\n      </div>\n    );\n  }\n}\n\ntype FileProps = {\n  contentBubbler: (a: string) => void;\n  fileBubbler: (a: File) => void;\n};\n\ntype FileState = {\n  dragging: boolean;\n  certificate: File | null;\n  certificate_contents: string | null;\n};\n\nclass FileUploader extends React.Component<FileProps, FileState> {\n  static counter = 0;\n  fileUploaderInput: HTMLElement | null = null;\n\n  constructor(props: FileProps) {\n    super(props);\n    this.state = {\n      dragging: false,\n      certificate: null,\n      certificate_contents: null,\n    };\n  }\n\n  dragEventCounter = 0;\n  dragenterListener = (event: React.DragEvent<HTMLDivElement>) => {\n    this.overrideEventDefaults(event);\n    this.dragEventCounter++;\n    if (event.dataTransfer.items && event.dataTransfer.items[0]) {\n      this.setState({ dragging: true });\n    } else if (\n      event.dataTransfer.types &&\n      event.dataTransfer.types[0] === \"Files\"\n    ) {\n      // This block handles support for IE - if you're not worried about\n      // that, you can omit this\n      this.setState({ dragging: true });\n    }\n  };\n\n  dragleaveListener = (event: React.DragEvent<HTMLDivElement>) => {\n    this.overrideEventDefaults(event);\n    this.dragEventCounter--;\n\n    if (this.dragEventCounter === 0) {\n      this.setState({ dragging: false });\n    }\n  };\n\n  dropListener = (event: React.DragEvent<HTMLDivElement>) => {\n    this.overrideEventDefaults(event);\n    this.dragEventCounter = 0;\n    this.setState({ dragging: false });\n\n    // Make sure that the uploaded file is a JSON file.\n    if (event.dataTransfer.files[0].type !== \"application/json\") return;\n\n    if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n      this.setState({\n        certificate: event.dataTransfer.files[0],\n      });\n\n      // At this point we should read the file's contents, but since the onLoad method is asynchronous,\n      // we will have to pass a callback, which handles sending the contents to the top component.\n      this.readFileContents(event.dataTransfer.files[0], () => {\n        // Once the file has been read our state should be set,\n        // this is the location where we should bubble up our contents\n        // to the top component.\n        if (\n          this.state.certificate_contents !== null &&\n          this.state.certificate !== null\n        ) {\n          this.handleFileContents(this.state.certificate_contents);\n          this.props.fileBubbler(this.state.certificate);\n        }\n      });\n    }\n  };\n\n  readFileContents(file: File, callback: Function) {\n    let data_reader: FileReader = new FileReader();\n\n    data_reader.onload = (e: any) => {\n      let result: string = e.target.result.replace(\n        new RegExp(\"data:.*/.*,\"),\n        \"\"\n      );\n      this.setState({\n        certificate_contents: new Buffer(result, \"base64\").toString(\"ascii\"),\n      });\n      callback();\n    };\n    data_reader.readAsDataURL(file);\n  }\n\n  handleFileContents(file_contents: string) {\n    try {\n      // If parsing the JSON completes succesfully, it means we have a valid piece of JSON.\n      let parsed_file_contents = JSON.parse(file_contents);\n      // TODO::(Hamza) - Confirm that this is a valid OAV2WRAPPED document. OA's function as\n      // of now doesn't work.\n      // https://github.com/Open-Attestation/open-attestation/issues/132\n\n      this.props.contentBubbler(this.state.certificate_contents!);\n    } catch (error) {\n      // File couldn't be parsed, invalid JSON, show an error.\n      console.log(\"ERROR : JSON couldn't be parsed.\");\n    }\n  }\n\n  overrideEventDefaults = (event: Event | React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  onSelectFileClick = () => {\n    this.fileUploaderInput && this.fileUploaderInput.click();\n  };\n\n  onFileChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      this.setState({ certificate: event.target.files[0] });\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"dragover\", (event: Event) => {\n      this.overrideEventDefaults(event);\n    });\n    window.addEventListener(\"drop\", (event: Event) => {\n      this.overrideEventDefaults(event);\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"dragover\", this.overrideEventDefaults);\n    window.removeEventListener(\"drop\", this.overrideEventDefaults);\n  }\n\n  render() {\n    return (\n      <FileUploaderPresentationalComponent\n        dragging={this.state.dragging}\n        onDrag={this.overrideEventDefaults}\n        onDragStart={this.overrideEventDefaults}\n        onDragEnd={this.overrideEventDefaults}\n        onDragOver={this.overrideEventDefaults}\n        onDragEnter={this.dragenterListener}\n        onDragLeave={this.dragleaveListener}\n        onDrop={this.dropListener}\n      ></FileUploaderPresentationalComponent>\n    );\n  }\n}\n\ntype PresentationalProps = {\n  dragging: boolean;\n  onDrag: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDragStart: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDragEnd: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDragOver: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDragEnter: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave: (event: React.DragEvent<HTMLDivElement>) => void;\n  onDrop: (event: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst FileUploaderPresentationalComponent: React.FunctionComponent<PresentationalProps> = (\n  props\n) => {\n  const {\n    dragging,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onDragOver,\n    onDragEnter,\n    onDragLeave,\n    onDrop,\n  } = props;\n\n\n  let uploaderClasses = \"file-uploader\";\n  if (dragging) {\n    uploaderClasses += \" file-uploader--dragging\";\n  }\n\n  return (\n    <div\n      className={uploaderClasses}\n      onDrag={onDrag}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n      onDragOver={onDragOver}\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n    >\n      <div className=\"file-uploader__contents\">\n        <span>Drop your file here.</span>\n      </div>\n    </div>\n  );\n};\n\ntype AppState = {\n  certificate: File | null;\n  certificate_contents: string | null;\n};\n\nconst App: React.FunctionComponent = () => {\n  const [certificate, setCertificate] = useState<File | null>(null);\n  const [certificateContents, setCertificateContents] = useState<string>(\n    require(\"./WrappedDocuments/certificate-valid-1.json\")\n  );\n  const [viewSwitchIndicator, setViewSwitchIndicator] = useState<boolean>(\n    false\n  );\n\n  const sourceFile = (inputFile: File | null) => {\n    setCertificate(inputFile);\n  };\n  const sourceContent = (inputContent: string) => {\n    setCertificateContents(inputContent);\n  };\n  const resetState = () => {\n    // This function is used when a certificate has been displayed and the user wants to\n    // return to the first view to try and verify another certificate.\n    setViewSwitchIndicator(false);\n    setCertificate(null);\n    setCertificateContents(\"\");\n  }\n\n  const Initial: React.MutableRefObject<boolean> = useRef(true);\n\n  useEffect(() => {\n    if (Initial.current) {\n      Initial.current = false;\n      return;\n    }\n\n    if (certificate !== null) {\n      // Certificate has been changed, time to load the document viewer.\n      setViewSwitchIndicator(true);\n    }\n  }, [certificate, certificateContents]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"General-container Header-container\">\n        <div\n          className={\n            \"General-container \" +\n            (viewSwitchIndicator ? \"Hidden-container\" : \"\")\n          }\n        >\n          <FileUploader\n            fileBubbler={sourceFile}\n            contentBubbler={sourceContent}\n          />\n        </div>\n        <div\n          className={\n            \"General-container \" +\n            (!viewSwitchIndicator ? \"Hidden-container\" : \"test-flex\")\n          }\n        >\n          {viewSwitchIndicator ? (\n            <>\n              <Viewer\n                document={{\n                  name: \"Current File\",\n                  document: getData(JSON.parse(certificateContents)),\n                }}\n              />\n              <DocumentIntegrity \n                certificate_contents={certificateContents}\n                certificate_resetter={resetState} \n              />\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nexport const styleObject = {\n    TemplatesContainer: styled.div`\n    `,\n    FrameContainer: styled.div`\n        display: flex;\n    `,\n    DocumentsContainer: styled.div`\n        width: 300px;\n        min-width: 300px;\n        max-width: 300px;\n        padding: 0.5rem;\n\n        .document {\n            cursor: pointer;\n            padding: 0.5rem;\n            background-color: #ebf8ff;\n            border-top: 4px solid #4299e2;\n            margin-bottom: 0.5rem;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .document.active {\n            border-top-color: #38b2ac;\n            background-color: #e6fffa;\n        }\n    `\n};\n\nexport const cssObject = {\n  firstStyle: css`\n              text-align: center;\n              font-weight: bold;\n            `,\n  secondStyle: css`\n              text-align: center;\n              flex-grow: 1;\n              align-self: center;\n              cursor: pointer;\n            `,\n  thirdStyle: css`\n                display: flex;\n                border-bottom: 1px solid #e2e8f0;\n                list-style: none;\n                margin: 0;\n                padding: 0;\n                li {\n                  margin-right: 0.25rem;\n                }\n                li.selected {\n                  margin-bottom: -1px;\n                }\n                a {\n                  text-decoration: none;\n                  padding-left: 1rem;\n                  padding-right: 1rem;\n                  padding-top: 0.5rem;\n                  padding-bottom: 0.5rem;\n                  font-weight: 600;\n                  display: inline-block;\n                  background-color: white;\n                  border-style: solid;\n                  border-color: #e2e8f0;\n                }\n                li.selected a {\n                  color: #222;\n                  border-bottom: none;\n                  border-left-width: 1px;\n                  border-right-width: 1px;\n                  border-top-width: 1px;\n                  border-top-left-radius: 0.25rem;\n                  border-top-right-radius: 0.25rem;\n                }\n\n                li a {\n                  color: #4299e1;\n                  border-width: 0px;\n                }\n              `,\n  fourthStyle: css`\n              border: 1px solid #e2e8f0;\n              border-top: none;\n              padding: 2rem;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            `\n};","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { css } from \"@emotion/core\";\n\nimport { styleObject, cssObject } from \"../Constants/constants\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport {\n  FrameActions,\n  FrameConnector,\n  HostActionsHandler,\n} from \"@govtechsg/decentralized-renderer-react-components\";\n\ninterface AppProps {\n  document: {\n    name: string;\n    document: any;\n  };\n}\n\nexport const Viewer: React.FunctionComponent<AppProps> = ({\n  document,\n}): React.ReactElement => {\n  const [toFrame, setToFrame] = useState<HostActionsHandler>();\n  const [height, setHeight] = useState(50);\n  const [templates, setTemplates] = useState<{ id: string; label: string }[]>(\n    []\n  );\n  const [certificate, setCertificate] = useState<{\n    name: string;\n    document: any;\n  }>();\n\n  const [selectedTemplate, setSelectedTemplate] = useState<string>(\"\");\n  const fn = useCallback((toFrame: HostActionsHandler) => {\n    setToFrame(() => toFrame);\n  }, []);\n\n  const fromFrame = (action: FrameActions): void => {\n    if (action.type === \"UPDATE_HEIGHT\") {\n      setHeight(action.payload);\n    }\n    if (action.type === \"UPDATE_TEMPLATES\") {\n      setTemplates(action.payload);\n      setSelectedTemplate(action.payload[0].id);\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  window.renderDocument = (document) => {\n    if (toFrame && document) {\n      toFrame({\n        type: \"RENDER_DOCUMENT\",\n        payload: {\n          document,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (document == null) return;\n    if (document !== null) {\n      setCertificate(document);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (document == null) return;\n    if (toFrame && document) {\n      toFrame({\n        type: \"RENDER_DOCUMENT\",\n        payload: {\n          document: document.document,\n        },\n      });\n    }\n  }, [toFrame, document]);\n\n  useEffect(() => {\n    if (document == null) return;\n    if (toFrame && selectedTemplate) {\n      toFrame({\n        type: \"SELECT_TEMPLATE\",\n        payload: selectedTemplate,\n      });\n    }\n  }, [selectedTemplate, toFrame]);\n\n  return (\n    <div \n          css={css`\n            width: 80%;\n          `}\n        >\n      <styleObject.FrameContainer>\n        <div\n          css={css`\n            width: 90%;\n            display: ${document ? \"block\" : \"none\"};\n          `}\n        >\n          <styleObject.TemplatesContainer>\n            <ul css={cssObject.thirdStyle}>\n              {templates.map((template) => (\n                <li\n                  key={template.id}\n                  className={`tab ${\n                    selectedTemplate === template.id ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    setSelectedTemplate(template.id);\n                  }}\n                >\n                  <a href=\"#\">{template.label}</a>\n                </li>\n              ))}\n            </ul>\n          </styleObject.TemplatesContainer>\n          <div css={cssObject.fourthStyle}>\n            <FrameConnector\n//              source=\"https://www.renderer.mza.jp\"\n              source=\"https://www.renderer.mza.jp\"\n              dispatch={fromFrame}\n              onConnected={fn}\n              css={css`\n                max-width: 1120px;\n                border: 0;\n                width: 100%;\n                height: ${height}px;\n                padding: 1rem;\n                padding-top: 0.5rem;\n              `}\n            />\n          </div>\n        </div>\n      </styleObject.FrameContainer>\n    </div>\n  );\n};\n\nexport default Viewer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}